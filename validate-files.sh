#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ OpenVPN Docker —É—Å—Ç–∞–Ω–æ–≤–∫–∏

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ OpenVPN Docker"
echo "=================================="
echo ""

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
REQUIRED_FILES=(
    "install.sh"
    "Dockerfile"
    "docker-compose.yml"
    "entrypoint.sh"
    "client-manager.sh"
    "README-DOCKER.md"
    ".env.example"
    "quick-start.sh"
)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:"
missing_files=0

for file in "${REQUIRED_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        echo "  ‚úÖ $file"
    else
        echo "  ‚ùå $file (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)"
        ((missing_files++))
    fi
done

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞:"
EXECUTABLE_FILES=(
    "install.sh"
    "entrypoint.sh"
    "client-manager.sh"
    "quick-start.sh"
)

for file in "${EXECUTABLE_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        if [[ -x "$file" ]]; then
            echo "  ‚úÖ $file (–∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π)"
        else
            echo "  ‚ö†Ô∏è  $file (–Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π)"
            chmod +x "$file"
            echo "      ‚Ü≥ –ü—Ä–∞–≤–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
        fi
    fi
done

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ bash —Å–∫—Ä–∏–ø—Ç–æ–≤
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ bash —Å–∫—Ä–∏–ø—Ç–æ–≤:"
BASH_FILES=(
    "install.sh"
    "entrypoint.sh"
    "client-manager.sh"
    "quick-start.sh"
)

syntax_errors=0

for file in "${BASH_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        if bash -n "$file" 2>/dev/null; then
            echo "  ‚úÖ $file (—Å–∏–Ω—Ç–∞–∫—Å–∏—Å OK)"
        else
            echo "  ‚ùå $file (–æ—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞)"
            ((syntax_errors++))
        fi
    fi
done

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Ñ–∞–π–ª–æ–≤:"

# Dockerfile
if [[ -f "Dockerfile" ]]; then
    if grep -q "FROM ubuntu" Dockerfile && grep -q "ENTRYPOINT" Dockerfile; then
        echo "  ‚úÖ Dockerfile (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ OK)"
    else
        echo "  ‚ö†Ô∏è  Dockerfile (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º)"
    fi
fi

# docker-compose.yml
if [[ -f "docker-compose.yml" ]]; then
    if grep -q "version:" docker-compose.yml && grep -q "services:" docker-compose.yml; then
        echo "  ‚úÖ docker-compose.yml (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ OK)"
    else
        echo "  ‚ö†Ô∏è  docker-compose.yml (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º)"
    fi
fi

echo ""

# –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
echo "üìä –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:"
for file in "${REQUIRED_FILES[@]}"; do
    if [[ -f "$file" ]]; then
        size=$(wc -c < "$file")
        if [[ $size -gt 100 ]]; then
            echo "  ‚úÖ $file (${size} –±–∞–π—Ç)"
        else
            echo "  ‚ö†Ô∏è  $file (${size} –±–∞–π—Ç - –≤–æ–∑–º–æ–∂–Ω–æ –ø—É—Å—Ç–æ–π)"
        fi
    fi
done

echo ""

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
echo "üìã –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:"
if [[ $missing_files -eq 0 && $syntax_errors -eq 0 ]]; then
    echo "  üéâ –í—Å–µ —Ñ–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
    echo ""
    echo "üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:"
    echo "  1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ Ubuntu —Å–µ—Ä–≤–µ—Ä"
    echo "  2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo ./install.sh"
    echo "  3. –ò–ª–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ./quick-start.sh"
    echo ""
    echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README-DOCKER.md"
else
    echo "  ‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:"
    [[ $missing_files -gt 0 ]] && echo "    - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç $missing_files —Ñ–∞–π–ª(–æ–≤)"
    [[ $syntax_errors -gt 0 ]] && echo "    - –û—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ $syntax_errors —Ñ–∞–π–ª(–∞—Ö)"
    echo ""
    echo "  –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º."
fi

echo ""
echo "üí° –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏:"
echo "  ‚Ä¢ –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ README-DOCKER.md"
echo "  ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./install.sh –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: journalctl -f"